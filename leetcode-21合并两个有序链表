/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:

    ListNode* merge(ListNode* l1, ListNode* l2){
        if(l1->val > l2->val){
            ListNode* new_node = new ListNode(l2->val);
            if(l2->next) new_node->next = merge(l1,l2->next);
            else new_node->next = l1;
            return new_node;
        }
        else{
            ListNode* new_node = new ListNode(l1->val);
            if(l1->next) new_node->next = merge(l1->next,l2);
            else new_node->next = l2;
            return new_node;
        }
    }
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if((!l1) && (!l2)) return nullptr;
        else if(!l2){
            return l1;
        }
        else if(!l1){
            return l2;
        }
        else{
            return merge(l1,l2);
        }
    }
};
